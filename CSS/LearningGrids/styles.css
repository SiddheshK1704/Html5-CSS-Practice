*{
    margin:0;
    padding:0;
    box-sizing: border-box;
}
body{
    height:100vh;
    width:100vw;
}
.container{
    background-color: rgb(54, 50, 50);
    height:100%;
    width:100%;
    display:grid;
    padding:4rem;
    /* row-gap:1rem;
    column-gap:1rem; 
    instead of writing this, write this short hand notation*/
    gap:1rem;
    
    /*to give gap between rows*/
    /* best practice is to use fractional units(divide into fractions)*/
    /* row-template-rows:1fr 1fr;- this can be written as: */
    
    grid-template-rows:repeat(6,1fr);
    grid-template-columns:repeat(1,1fr);


}
.item{
    background-color: rgb(94,94,194);
    border:5px solid black;
    color:white;
    display:flex;
    justify-content:center;
    align-items:center;
}

/* .i2{
    grid-column-start: 2;
    grid-column-end: 3;
    grid-row-start: 3;
    grid-row-end: 4;
}
.i3{
    grid-column-start: 3;
    grid-column-end: 4;
    grid-row-start: 3;
    grid-row-end: 4;
} */

/* RESPONSIVE DESIGN */
@media (min-width:768px){/*min width is given because if it gows out of min-width,
    it uses the normal values instead of the media query*/
    .container{
        grid-template-rows:repeat(4,1fr);
        grid-template-columns:repeat(3,1fr);
    }
    .header, .footer{
        grid-column-start: 1;
        grid-column-end: 4;
    }
    .Lsidebar{
        grid-row-start: 2;
        grid-row-end: 4;
    }
    .i1{
        grid-column-start: 2;
        grid-column-end: 4;
        grid-row-start: 2;
        grid-row-end: 3;
    }
}